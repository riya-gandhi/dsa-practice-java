function a(){
    b();
    function b(){
        console.log(c); //10
    }
}

var c =10;

a();

when execution context is created, a reference to lexical scope of PARENT is also created
putting a breakpoint on line 4
we will observe in call stack -

in b's EC, lexical scope of its parent is present ie of a and of global object window

above CHAIN is called SCOPE CHAIN
and b() is in CLOSURE of a()

////////////--------------------------

temporal DEAD ZONE? TDZ?

var a;
let b;
const c;

variable created from var keyword is stored in global object
variable created using let and const are stored in diff object (script) in browser also called TDZ

------------------------------------------
